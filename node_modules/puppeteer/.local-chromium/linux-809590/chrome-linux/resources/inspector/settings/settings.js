import{UIString as t,Settings as e}from"../common/common.js";import{Reload as s}from"../components/components.js";import{userMetrics as i,InspectorFrontendHost as n,UserMetrics as r}from"../host/host.js";import{Widget as o,Utils as a,ARIAUtils as c,ViewManager as d,Toolbar as l,View as h,ShortcutsScreen as m,TabbedPane as u,Dialog as b,GlassPane as g,SettingsUI as p,UIUtils as _,InspectorView as S,ListWidget as f,ListModel as k,ListControl as E,ShortcutRegistry as v,KeyboardShortcut as C,ActionRegistry as x,Icon as y}from"../ui/ui.js";class I extends o.VBox{constructor(){super(!0),this.registerRequiredCSS("settings/settingsScreen.css"),this.contentElement.classList.add("settings-window-main"),this.contentElement.classList.add("vbox");const t=createElement("div"),e=a.createShadowRootWithCoreStyles(t,"settings/settingsScreen.css").createChild("div","settings-window-title");c.markAsHeading(e,1),e.textContent=ls`Settings`,this._tabbedLocation=d.ViewManager.instance().createTabbedLocation(()=>I._revealSettingsScreen(),"settings-view");const s=this._tabbedLocation.tabbedPane();if(s.leftToolbar().appendToolbarItem(new l.ToolbarItem(t)),s.setShrinkableTabs(!1),s.makeVerticalTabLayout(),!Root.Runtime.experiments.isEnabled("customKeyboardShortcuts")){const t=new h.SimpleView(ls`Shortcuts`);m.ShortcutsScreen.instance().createShortcutsTabView().show(t.element),this._tabbedLocation.appendView(t)}s.show(this.contentElement),s.selectTab("preferences"),s.addEventListener(u.Events.TabInvoked,this._tabInvoked,this),this._reportTabOnReveal=!1}static _revealSettingsScreen(){const t=self.runtime.sharedInstance(I);if(t.isShowing())return t;t._reportTabOnReveal=!0;const e=new b.Dialog;return e.contentElement.tabIndex=-1,e.addCloseButton(),e.setOutsideClickCallback(()=>{}),e.setPointerEventsBehavior(g.PointerEventsBehavior.PierceGlassPane),e.setOutsideTabIndexBehavior(b.OutsideTabIndexBehavior.PreserveMainViewTabIndex),t.show(e.contentElement),e.show(),t}static async _showSettingsScreen(t={}){const{name:e,focusTabHeader:s}=t,i=I._revealSettingsScreen();i._selectTab(e||"preferences");const n=i._tabbedLocation.tabbedPane();await n.waitForTabElementUpdate(),s?n.focusSelectedTabHeader():n.focus()}resolveLocation(t){return this._tabbedLocation}_selectTab(t){this._tabbedLocation.tabbedPane().selectTab(t,!0)}_tabInvoked(t){const e=t.data;if(!e.isUserGesture)return;const s=e.prevTabId,i=e.tabId;!this._reportTabOnReveal&&s&&s===i||(this._reportTabOnReveal=!1,this._reportSettingsPanelShown(i))}_reportSettingsPanelShown(t){t!==ls`Shortcuts`?i.settingsPanelShown(t):i.settingsPanelShown("shortcuts")}}class w extends o.VBox{constructor(t,e){super(),this.element.classList.add("settings-tab-container"),e&&(this.element.id=e);this.element.createChild("header").createChild("h1").createTextChild(t),this.containerElement=this.element.createChild("div","settings-container-wrapper").createChild("div","settings-tab settings-content settings-container")}_appendSection(t){const e=this.containerElement.createChild("div","settings-block");if(t){c.markAsGroup(e);const s=e.createChild("div","settings-section-title");s.textContent=t,c.markAsHeading(s,2),c.setAccessibleName(e,t)}return e}}class T extends w{constructor(){super(t.UIString("Preferences"),"preferences-tab-content");const i=["","Appearance","Sources","Elements","Network","Performance","Console","Extensions","Persistence","Debugger","Global"];this._nameToSection=new Map;for(const t of i)this._createSectionElement(t);self.runtime.extensions("setting").forEach(this._addSetting.bind(this)),self.runtime.extensions(p.SettingUI).forEach(this._addSettingUI.bind(this)),this._appendSection().appendChild(_.createTextButton(t.UIString("Restore defaults and reload"),(function(){e.Settings.instance().clearAll(),s.reload()})))}static isSettingVisible(t){const e=t.descriptor();return"title"in e&&"category"in e}_addSetting(t){if(!T.isSettingVisible(t))return;const s=this._sectionElement(t.descriptor().category);if(!s)return;const i=e.Settings.instance().moduleSetting(t.descriptor().settingName),n=p.createControlForSetting(i);n&&s.appendChild(n)}_addSettingUI(t){const e=t.descriptor().category||"";t.instance().then(function(t){const s=t.settingElement();if(s){let t=this._sectionElement(e);t||(t=this._createSectionElement(e)),t.appendChild(s)}}.bind(this))}_createSectionElement(e){const s=e&&t.UIString(e),i=this._appendSection(s);return this._nameToSection.set(e,i),i}_sectionElement(t){return this._nameToSection.get(t)||null}}var L=Object.freeze({__proto__:null,SettingsScreen:I,GenericSettingsTab:T,ExperimentsSettingsTab:class extends w{constructor(){super(t.UIString("Experiments"),"experiments-tab-content");const e=Root.Runtime.experiments.allConfigurableExperiments().sort(),s=e.filter(t=>t.unstable),i=e.filter(t=>!t.unstable);if(i.length){const e=this._appendSection(),s=t.UIString("These experiments could be dangerous and may require restart.");e.appendChild(this._createExperimentsWarningSubsection(s));for(const t of i)e.appendChild(this._createExperimentCheckbox(t))}if(s.length){const e=this._appendSection(),i=t.UIString("These experiments are particularly unstable. Enable at your own risk.");e.appendChild(this._createExperimentsWarningSubsection(i));for(const t of s)e.appendChild(this._createExperimentCheckbox(t))}}_createExperimentsWarningSubsection(e){const s=createElement("div");s.createChild("span","settings-experiments-warning-subsection-warning").textContent=t.UIString("WARNING:"),s.createTextChild(" ");return s.createChild("span","settings-experiments-warning-subsection-message").textContent=e,s}_createExperimentCheckbox(e){const s=_.CheckboxLabel.create(t.UIString(e.title),e.isEnabled()),n=s.checkboxElement;n.name=e.name,n.addEventListener("click",(function(){e.setEnabled(n.checked),i.experimentChanged(e.name,e.isEnabled()),S.InspectorView.instance().displayReloadRequiredWarning(ls`One or more settings have changed which requires a reload to take effect.`)}),!1);const r=createElement("p");return r.className=e.unstable&&!e.isEnabled()?"settings-experiment-unstable":"",r.appendChild(s),r}},ActionDelegate:class{handleAction(t,e){let s;switch(e){case"settings.show":return I._showSettingsScreen({focusTabHeader:!0}),!0;case"settings.documentation":return n.InspectorFrontendHostInstance.openInNewTab(_.addReferrerToURL("https://developers.google.com/web/tools/chrome-devtools/")),!0;case"settings.shortcuts":return s={name:ls`Shortcuts`,focusTabHeader:!0},Root.Runtime.experiments.isEnabled("customKeyboardShortcuts")&&(s={name:"keybinds",focusTabHeader:!0}),I._showSettingsScreen(s),!0}return!1}},Revealer:class{reveal(t){console.assert(t instanceof e.Setting);const s=t;let i=!1;return self.runtime.extensions("setting").forEach((function(t){if(!T.isSettingVisible(t))return;t.descriptor().settingName===s.name&&(n.InspectorFrontendHostInstance.bringToFront(),I._showSettingsScreen(),i=!0)})),self.runtime.extensions(p.SettingUI).forEach((function(t){const e=t.descriptor().settings;e&&-1!==e.indexOf(s.name)&&(n.InspectorFrontendHostInstance.bringToFront(),I._showSettingsScreen(),i=!0)})),self.runtime.extensions("view").forEach((function(t){if("settings-view"!==t.descriptor().location)return;const e=t.descriptor().settings;e&&-1!==e.indexOf(s.name)&&(n.InspectorFrontendHostInstance.bringToFront(),I._showSettingsScreen({name:t.descriptor().id}),i=!0)})),i?Promise.resolve():Promise.reject()}}});class A extends o.VBox{constructor(){super(!0),this.registerRequiredCSS("settings/frameworkBlackboxSettingsTab.css");const s=this.contentElement.createChild("div","header");s.textContent=ls`Framework Blackboxing`,c.markAsHeading(s,1),this.contentElement.createChild("div","intro").textContent=ls`Debugger will skip through the scripts and will not stop on exceptions thrown by them.`;const i=this.contentElement.createChild("div","blackbox-content-scripts");i.appendChild(p.createSettingCheckbox(ls`Blackbox content scripts`,e.Settings.instance().moduleSetting("skipContentScripts"),!0)),i.title=ls`Blackbox content scripts (extension scripts in the page)`,this._blackboxLabel=t.UIString("Blackbox"),this._disabledLabel=t.UIString("Disabled"),this._list=new f.ListWidget(this),this._list.element.classList.add("blackbox-list"),this._list.registerRequiredCSS("settings/frameworkBlackboxSettingsTab.css");const n=document.createElement("div");n.classList.add("blackbox-list-empty"),n.textContent=t.UIString("No blackboxed patterns"),this._list.setEmptyPlaceholder(n),this._list.show(this.contentElement);const r=_.createTextButton(t.UIString("Add pattern..."),this._addButtonClicked.bind(this),"add-button");c.setAccessibleName(r,ls`Add filename pattern`),this.contentElement.appendChild(r),this._setting=e.Settings.instance().moduleSetting("skipStackFramesPattern"),this._setting.addChangeListener(this._settingUpdated,this),this.setDefaultFocusedElement(r)}wasShown(){super.wasShown(),this._settingUpdated()}_settingUpdated(){this._list.clear();const t=this._setting.getAsArray();for(let e=0;e<t.length;++e)this._list.appendItem(t[e],!0)}_addButtonClicked(){this._list.addNewItem(this._setting.getAsArray().length,{pattern:"",disabled:!1})}renderItem(t,e){const s=document.createElement("div");s.classList.add("blackbox-list-item");const i=s.createChild("div","blackbox-pattern");return i.textContent=t.pattern,i.title=ls`Blackbox scripts whose names match '${t.pattern}'`,s.createChild("div","blackbox-separator"),s.createChild("div","blackbox-behavior").textContent=t.disabled?this._disabledLabel:this._blackboxLabel,t.disabled&&s.classList.add("blackbox-disabled"),s}removeItemRequested(t,e){const s=this._setting.getAsArray();s.splice(e,1),this._setting.setAsArray(s)}commitEdit(t,e,s){t.pattern=e.control("pattern").value.trim(),t.disabled=e.control("behavior").value===this._disabledLabel;const i=this._setting.getAsArray();s&&i.push(t),this._setting.setAsArray(i)}beginEdit(t){const e=this._createEditor();return e.control("pattern").value=t.pattern,e.control("behavior").value=t.disabled?this._disabledLabel:this._blackboxLabel,e}_createEditor(){if(this._editor)return this._editor;const e=new f.Editor;this._editor=e;const s=e.contentElement(),i=s.createChild("div","blackbox-edit-row");i.createChild("div","blackbox-pattern").textContent=t.UIString("Pattern"),i.createChild("div","blackbox-separator blackbox-separator-invisible"),i.createChild("div","blackbox-behavior").textContent=t.UIString("Behavior");const n=s.createChild("div","blackbox-edit-row"),r=e.createInput("pattern","text","/framework\\.js$",function(t,e,s){const i=s.value.trim(),n=this._setting.getAsArray();if(!i.length)return{valid:!1,errorMessage:ls`Pattern cannot be empty`};for(let t=0;t<n.length;++t)if(t!==e&&n[t].pattern===i)return{valid:!1,errorMessage:ls`Pattern already exists`};let r;try{r=new RegExp(i)}catch(t){}if(!r)return{valid:!1,errorMessage:ls`Pattern must be a valid regular expression`};return{valid:!0}}.bind(this));c.setAccessibleName(r,ls`Pattern`),n.createChild("div","blackbox-pattern").appendChild(r),n.createChild("div","blackbox-separator blackbox-separator-invisible");const o=e.createSelect("behavior",[this._blackboxLabel,this._disabledLabel],(function(t,e,s){return{valid:!0}}));return c.setAccessibleName(o,ls`Behavior`),n.createChild("div","blackbox-behavior").appendChild(o),e}}var R=Object.freeze({__proto__:null,FrameworkBlackboxSettingsTab:A});class B extends o.VBox{constructor(){super(!0),this.registerRequiredCSS("settings/keybindsSettingsTab.css");this.contentElement.createChild("header").createChild("h1").textContent=ls`Shortcuts`;const t=e.Settings.instance().moduleSetting("activeKeybindSet"),s=e.Settings.instance().moduleSetting("userShortcuts");s.addChangeListener(this.update,this),t.addChangeListener(this.update,this);const i=p.createControlForSetting(t,ls`Match shortcuts from preset`);i.classList.add("keybinds-set-select"),this.contentElement.appendChild(i),this._items=new k.ListModel,this._list=new E.ListControl(this._items,this,E.ListMode.NonViewport),this._items.replaceAll(this._createListItems()),c.markAsList(this._list.element),this.registerRequiredCSS("settings/keybindsSettingsTab.css"),this.contentElement.appendChild(this._list.element),c.setAccessibleName(this._list.element,ls`Keyboard shortcuts list`),this.contentElement.appendChild(_.createTextButton(ls`Restore default shortcuts`,()=>{s.set([]),t.set(v.DefaultShortcutSetting)})),this._editingItem=null,this._editingRow=null,this.update()}createElementForItem(t){let e=document.createElement("div");if("string"==typeof t)c.setLevel(e,1),e.classList.add("keybinds-category-header"),e.textContent=t;else{const s=new U(t,this,t===this._editingItem);e=s.element,c.setLevel(e,2),t===this._editingItem&&(this._editingRow=s)}return e.classList.add("keybinds-list-item"),c.markAsListitem(e),e.tabIndex=t===this._list.selectedItem()&&t!==this._editingItem?0:-1,e}commitChanges(t,e){for(const[t,s]of e)t.type!==C.Type.UnsetShortcut&&(v.ShortcutRegistry.instance().removeShortcut(t),s||i.actionTaken(r.Action.ShortcutRemoved)),s&&(v.ShortcutRegistry.instance().registerUserShortcut(t.changeKeys(s).changeType(C.Type.UserShortcut)),t.type===C.Type.UnsetShortcut?i.actionTaken(r.Action.UserShortcutAdded):i.actionTaken(r.Action.ShortcutModified));this.stopEditing(t)}heightForItem(t){return 0}isItemSelectable(t){return!0}selectedItemChanged(t,e,s,i){s&&(s.tabIndex=-1),i&&(e===this._editingItem?this._editingRow.focus():(i.tabIndex=0,this._list.element.hasFocus()&&i.focus()),this.setDefaultFocusedElement(i))}updateSelectedItemARIA(t,e){return!0}startEditing(t){this._editingItem&&this.stopEditing(this._editingItem),_.markBeingEdited(this._list.element,!0),this._editingItem=t,this._list.refreshItem(t)}stopEditing(t){_.markBeingEdited(this._list.element,!1),this._editingItem=null,this._editingRow=null,this._list.refreshItem(t),this.focus()}_createListItems(){const t=x.ActionRegistry.instance().actions().sort((t,e)=>t.category()<e.category()?-1:t.category()>e.category()?1:t.id()<e.id()?-1:t.id()>e.id()?1:0),e=[];let s;return t.forEach(t=>{s!==t.category()&&e.push(t.category()),e.push(t),s=t.category()}),e}update(){this._editingItem&&this.stopEditing(this._editingItem),this._list.refreshAllItems(),this._list.selectedItem()||this._list.selectItem(this._items.at(0))}willHide(){this._editingItem&&this.stopEditing(this._editingItem)}}class U{constructor(t,e,s){this._isEditing=!!s,this._settingsTab=e,this._item=t,this.element=document.createElement("div"),this.element.classList.toggle("keybinds-editing",this._isEditing),this.element.createChild("div","keybinds-action-name keybinds-list-text").textContent=t.title();const i=v.ShortcutRegistry.instance().shortcutsForAction(t.id());this._editedShortcuts=new Map,this._shortcutInputs=new Map,this._elementToFocus=null,this._confirmButton=null,this._addShortcutLinkContainer=null,this._errorMessageElement=null,i.forEach(this._createShortcutRow,this),0===i.length&&this._createEmptyInfo(),this._isEditing&&this._setupEditor()}focus(){this._elementToFocus&&this._elementToFocus.focus()}_createEmptyInfo(){if(v.ShortcutRegistry.instance().actionHasDefaultShortcut(this._item.id())){const t=y.Icon.create("largeicon-shortcut-changed","keybinds-modified");c.setAccessibleName(t,ls`Shortcut modified`),this.element.appendChild(t)}if(!this._isEditing){const t=this.element.createChild("div","keybinds-shortcut keybinds-list-text");c.setAccessibleName(t,ls`No shortcut for action`),Root.Runtime.experiments.isEnabled("keyboardShortcutEditor")&&this.element.appendChild(this._createEditButton())}}_setupEditor(){this._addShortcutLinkContainer=this.element.createChild("div","keybinds-shortcut devtools-link");const t=this._addShortcutLinkContainer.createChild("span","devtools-link");t.textContent=ls`Add a shortcut`,t.tabIndex=0,c.markAsLink(t),this._elementToFocus||(this._elementToFocus=t),this._errorMessageElement=this.element.createChild("div","keybinds-info keybinds-error hidden"),c.markAsAlert(this._errorMessageElement),this._confirmButton=this.element.createChild("button","keybinds-confirm-button"),this._confirmButton.appendChild(y.Icon.create("largeicon-checkmark")),this._confirmButton.addEventListener("click",()=>this._settingsTab.commitChanges(this._item,this._editedShortcuts)),c.setAccessibleName(this._confirmButton,ls`Confirm changes`);const e=this.element.createChild("button","keybinds-cancel-button");e.appendChild(y.Icon.create("largeicon-delete")),e.addEventListener("click",()=>this._settingsTab.stopEditing(this._item)),this.element.addEventListener("keydown",t=>{isEscKey(t)&&(this._settingsTab.stopEditing(this._item),t.consume(!0))}),c.setAccessibleName(e,ls`Discard changes`),self.onInvokeElement(t,()=>{const t=new C.KeyboardShortcut([],this._item.id(),C.Type.UnsetShortcut);this._createShortcutRow(t),this.element.appendChild(this._addShortcutLinkContainer),this.element.appendChild(this._errorMessageElement),this.element.appendChild(this._confirmButton),this.element.appendChild(e),this._shortcutInputs.get(t).focus()})}_createShortcutRow(t,e){let s;t.type===C.Type.UnsetShortcut||t.isDefault()||(s=y.Icon.create("largeicon-shortcut-changed","keybinds-modified"),c.setAccessibleName(s,ls`Shortcut modified`),this.element.appendChild(s));const i=this.element.createChild("div","keybinds-shortcut keybinds-list-text");if(this._isEditing){const e=i.createChild("input","harmony-input");e.spellcheck=!1,this._shortcutInputs.set(t,e),this._elementToFocus||(this._elementToFocus=e),e.value=t.title(),e.addEventListener("keydown",this._onShortcutInputKeyDown.bind(this,t,e));const n=i.createChild("button");n.classList.add("keybinds-delete-button"),n.appendChild(y.Icon.create("largeicon-trash-bin")),n.addEventListener("click",()=>{this.element.removeChild(i),s&&this.element.removeChild(s),this._shortcutInputs.delete(t),this._editedShortcuts.set(t,null),this._validateInputs()}),c.setAccessibleName(n,ls`Remove shortcut`)}else{t.descriptors.flatMap(t=>t.name.split(" + ")).forEach(t=>{i.createChild("span","keybinds-key").textContent=t}),Root.Runtime.experiments.isEnabled("keyboardShortcutEditor")&&0===e&&this.element.appendChild(this._createEditButton())}}_createEditButton(){const t=document.createElement("button");return t.classList.add("keybinds-edit-button"),t.appendChild(y.Icon.create("largeicon-edit")),t.addEventListener("click",()=>this._settingsTab.startEditing(this._item)),c.setAccessibleName(t,ls`Edit shortcut`),t}_onShortcutInputKeyDown(t,e,s){if("Tab"!==s.key){const i=C.KeyboardShortcut.makeKeyFromEvent(s),n=C.KeyboardShortcut.keyCodeAndModifiersFromKey(i),r=C.KeyboardShortcut.makeDescriptor({code:i,name:s.key},n.modifiers);e.value=r.name,this._editedShortcuts.set(t,[r]),C.KeyboardShortcut.isModifier(n.keyCode)&&(e.value=e.value.slice(0,e.value.lastIndexOf("+"))),this._validateInputs(),s.consume(!0)}}_validateInputs(){this._confirmButton.disabled=!1,this._errorMessageElement.classList.add("hidden"),this._shortcutInputs.forEach((t,e)=>{const s=this._editedShortcuts.get(e);if(!s)return;if(C.KeyboardShortcut.isModifier(s[0].key))return this._confirmButton.disabled=!0,t.classList.add("error-input"),c.setInvalid(t,!0),this._errorMessageElement.classList.remove("hidden"),void(this._errorMessageElement.textContent=ls`Shortcuts cannot contain only modifier keys.`);const i=v.ShortcutRegistry.instance().actionsForDescriptors(s).filter(t=>t!==this._item.id());if(i.length){this._confirmButton.disabled=!0,t.classList.add("error-input"),c.setInvalid(t,!0),this._errorMessageElement.classList.remove("hidden");const e=x.ActionRegistry.instance().action(i[0]);this._errorMessageElement.textContent=ls`This shortcut is in use by ${e.title()}.`}else t.classList.remove("error-input"),c.setInvalid(t,!1)})}}var F=Object.freeze({__proto__:null,KeybindsSettingsTab:B,ShortcutListItem:U,KeybindsItem:void 0});export{R as FrameworkBlackboxSettingsTab,F as KeybindsSettingsTab,L as SettingsScreen};
