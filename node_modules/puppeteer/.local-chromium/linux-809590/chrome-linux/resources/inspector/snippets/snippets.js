import{PlatformFileSystem as e,FileSystemWorkspaceBinding as t,IsolatedFileSystemManager as n}from"../persistence/persistence.js";import{Workspace as s}from"../workspace/workspace.js";import{Settings as i,ResourceType as p,Console as o,UIString as r}from"../common/common.js";import{RuntimeModel as c,ConsoleModel as a}from"../sdk/sdk.js";import{Context as l}from"../ui/ui.js";import{FilteredListWidget as u}from"../quick_open/quick_open.js";function g(e){return encodeURIComponent(e)}function m(e){return decodeURIComponent(e)}class d extends e.PlatformFileSystem{constructor(){super("snippet://","snippets"),this._lastSnippetIdentifierSetting=i.Settings.instance().createSetting("scriptSnippets_lastIdentifier",0),this._snippetsSetting=i.Settings.instance().createSetting("scriptSnippets",[])}initialFilePaths(){return this._snippetsSetting.get().map(e=>g(e.name))}async createFile(e,t){const n=this._lastSnippetIdentifierSetting.get()+1;this._lastSnippetIdentifierSetting.set(n);const s=ls`Script snippet #${n}`,i=this._snippetsSetting.get();return i.push({name:s,content:""}),this._snippetsSetting.set(i),g(s)}async deleteFile(e){const t=m(e.substring(1)),n=this._snippetsSetting.get(),s=n.filter(e=>e.name!==t);return n.length!==s.length&&(this._snippetsSetting.set(s),!0)}async requestFileContent(e){const t=m(e.substring(1)),n=this._snippetsSetting.get().find(e=>e.name===t);return{content:n?n.content:null,isEncoded:!1}}async setFileContent(e,t,n){const s=m(e.substring(1)),i=this._snippetsSetting.get(),p=i.find(e=>e.name===s);return!!p&&(p.content=t,this._snippetsSetting.set(i),!0)}renameFile(e,t,n){const s=m(e.substring(1)),i=this._snippetsSetting.get(),p=i.find(e=>e.name===s);t=t.trim(),p&&0!==t.length&&!i.find(e=>e.name===t)?(p.name=t,this._snippetsSetting.set(i),n(!0,t)):n(!1)}async searchInPath(e,t){const n=new RegExp(e.escapeForRegExp(),"i");return this._snippetsSetting.get().filter(e=>e.content.match(n)).map(e=>"snippet:///"+g(e.name))}mimeFromPath(e){return"text/javascript"}contentType(e){return p.resourceTypes.Script}tooltipForURL(e){return ls`Linked to ${m(e.substring(this.path().length))}`}supportsAutomapping(){return!0}}async function S(e){if(!e.url().startsWith("snippet://"))return;const t=l.Context.instance().flavor(c.ExecutionContext);if(!t)return;const n=t.runtimeModel;await e.requestContent(),e.commitWorkingCopy();const s=e.workingCopy();o.Console.instance().show();const i=e.url(),p=await t.evaluate({expression:`${s}\n//# sourceURL=${i}`,objectGroup:"console",silent:!1,includeCommandLineAPI:!0,returnByValue:!1,generatePreview:!0,replMode:!0},!1,!0);if(p.exceptionDetails)return void a.ConsoleModel.instance().addMessage(a.ConsoleMessage.fromException(n,p.exceptionDetails,void 0,void 0,i));if(!p.object)return;const r=t.debuggerModel.scriptsForSourceURL(i),u=r[r.length-1].scriptId;a.ConsoleModel.instance().addMessage(new a.ConsoleMessage(n,a.MessageSource.JS,a.MessageLevel.Info,"",a.MessageType.Result,i,void 0,void 0,[p.object],void 0,void 0,t.id,u))}n.IsolatedFileSystemManager.instance().addPlatformFileSystem("snippet://",new d);var h=Object.freeze({__proto__:null,evaluateScriptSnippet:S,isSnippetsUISourceCode:function(e){return e.url().startsWith("snippet://")},isSnippetsProject:function(e){return e.type()===s.projectTypes.FileSystem&&"snippets"===t.FileSystemWorkspaceBinding.fileSystemType(e)}});class f extends u.Provider{constructor(){super(),this._snippets=[]}selectItem(e,t){null!==e&&S(this._snippets[e])}notFoundText(e){return r.UIString("No snippets found.")}attach(){this._snippets=Snippets.project.uiSourceCodes()}detach(){this._snippets=[]}itemCount(){return this._snippets.length}itemKeyAt(e){return this._snippets[e].name()}renderItem(e,t,n,s){n.textContent=unescape(this._snippets[e].name()),n.classList.add("monospace"),u.FilteredListWidget.highlightRanges(n,t,!0)}}var _=Object.freeze({__proto__:null,SnippetsQuickOpen:f});const y=s.WorkspaceImpl.instance().projectsForType(s.projectTypes.FileSystem).find(e=>"snippets"===t.FileSystemWorkspaceBinding.fileSystemType(e));export{h as ScriptSnippetFileSystem,_ as SnippetsQuickOpen,y as project};
